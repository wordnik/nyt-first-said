import unittest
from parsers.utils import find_pos_for_word

class POSSuite(unittest.TestCase):
  pos_tags = [('Advertisement', 'NNP'), ('Supported', 'VBN'), ('by', 'IN'), ('the', 'DT'), ('global', 'JJ'), ('profile', 'NN'), ('Saou', 'NNP'), ('Ichikawa', 'NNP'), ('is', 'VBZ'), ('the', 'DT'), ('country', 'NN'), ('’', 'NNP'), ('s', 'VBD'), ('first', 'RB'), ('severely', 'RB'), ('disabled', 'JJ'), ('author', 'NN'), ('to', 'TO'), ('win', 'VB'), ('a', 'DT'), ('top', 'JJ'), ('literary', 'JJ'), ('prize', 'NN'), ('Her', 'PRP$'), ('novel', 'JJ'), ('“', 'JJ'), ('Hunchback', 'NNP'), ('”', 'NNP'), ('is', 'VBZ'), ('an', 'DT'), ('angry', 'JJ'), ('cry', 'NN'), ('against', 'IN'), ('“', 'NNP'), ('ableist', 'NN'), ('machismo.', 'NN'), ('”', 'NN'), ('By', 'IN'), ('Martin', 'NNP'), ('Fackler', 'NNP'), ('Reporting', 'VBG'), ('from', 'IN'), ('Yamato', 'NNP'), ('Japan', 'NNP'), ('When', 'WRB'), ('Saou', 'NNP'), ('Ichikawa', 'NNP'), ('was', 'VBD'), ('named', 'VBN'), ('the', 'DT'), ('winner', 'NN'), ('of', 'IN'), ('the', 'DT'), ('Akutagawa', 'NNP'), ('Prize', 'NNP'), ('in', 'IN'), ('July', 'NNP'), ('2023', 'CD'), ('one', 'CD'), ('of', 'IN'), ('Japan', 'NNP'), ('’', 'NNP'), ('s', 'VBP'), ('oldest', 'JJS'), ('and', 'CC'), ('most', 'RBS'), ('prestigious', 'JJ'), ('literary', 'JJ'), ('awards', 'NNS'), ('she', 'PRP'), ('flashed', 'VBD'), ('a', 'DT'), ('thumbs-up', 'NN'), ('to', 'TO'), ('her', 'PRP$'), ('parents', 'NNS'), ('and', 'CC'), ('editor', 'NN'), ('before', 'IN'), ('going', 'VBG'), ('onstage', 'NN'), ('to', 'TO'), ('receive', 'VB'), ('it', 'PRP'), ('in', 'IN'), ('front', 'NN'), ('of', 'IN'), ('a', 'DT'), ('gold', 'NN'), ('screen', 'NN'), ('While', 'IN'), ('the', 'DT'), ('45-year-old', 'JJ'), ('novelist', 'NN'), ('was', 'VBD'), ('the', 'DT'), ('181st', 'JJ'), ('winner', 'NN'), ('of', 'IN'), ('the', 'DT'), ('prize', 'NN'), ('she', 'PRP'), ('was', 'VBD'), ('the', 'DT'), ('first', 'JJ'), ('to', 'TO'), ('require', 'VB'), ('a', 'DT'), ('ramp', 'NN'), ('to', 'TO'), ('ascend', 'VB'), ('the', 'DT'), ('stage', 'NN'), ('Ms.', 'NNP'), ('Ichikawa', 'NNP'), ('has', 'VBZ'), ('congenital', 'VBN'), ('myopathy', 'NN'), ('a', 'DT'), ('muscle', 'NN'), ('disorder', 'NN'), ('that', 'WDT'), ('requires', 'VBZ'), ('her', 'PRP'), ('to', 'TO'), ('use', 'VB'), ('a', 'DT'), ('wheelchair', 'NN'), ('for', 'IN'), ('mobility', 'NN'), ('and', 'CC'), ('a', 'DT'), ('ventilator', 'NN'), ('to', 'TO'), ('breathe', 'VB'), ('and', 'CC'), ('was', 'VBD'), ('the', 'DT'), ('first', 'JJ'), ('author', 'NN'), ('with', 'IN'), ('a', 'DT'), ('severe', 'JJ'), ('physical', 'JJ'), ('disability', 'NN'), ('to', 'TO'), ('win', 'VB'), ('She', 'PRP'), ('used', 'VBD'), ('her', 'PRP'), ('moment', 'NN'), ('in', 'IN'), ('the', 'DT'), ('national', 'JJ'), ('spotlight', 'NN'), ('to', 'TO'), ('highlight', 'VB'), ('how', 'WRB'), ('people', 'NNS'), ('with', 'IN'), ('disabilities', 'NNS'), ('face', 'VBP'), ('isolation', 'NN'), ('and', 'CC'), ('are', 'VBP'), ('invisible', 'JJ'), ('in', 'IN'), ('society', 'NN'), ('a', 'DT'), ('theme', 'NN'), ('she', 'PRP'), ('took', 'VBD'), ('up', 'RP'), ('in', 'IN'), ('her', 'PRP$'), ('prizewinning', 'NN'), ('novel', 'NN'), ('“', 'NNP'), ('Hunchback.', 'NNP'), ('”', 'NNP'), ('“', 'NNP'), ('I', 'PRP'), ('wrote', 'VBD'), ('this', 'DT'), ('novel', 'JJ'), ('thinking', 'NN'), ('that', 'IN'), ('it', 'PRP'), ('is', 'VBZ'), ('a', 'DT'), ('problem', 'NN'), ('that', 'WDT'), ('there', 'EX'), ('were', 'VBD'), ('few', 'JJ'), ('authors', 'NNS'), ('with', 'IN'), ('disabilities', 'NNS'), ('”', 'VBZ'), ('she', 'PRP'), ('told', 'VBD'), ('reporters', 'NNS'), ('pressing', 'VBG'), ('a', 'DT'), ('button', 'NN'), ('on', 'IN'), ('her', 'PRP$'), ('larynx', 'NN'), ('to', 'TO'), ('speak', 'VB'), ('“', 'JJ'), ('Why', 'WRB'), ('did', 'VBD'), ('the', 'DT'), ('first', 'JJ'), ('winner', 'NN'), ('not', 'RB'), ('appear', 'RB'), ('until', 'IN'), ('2023', 'CD'), ('I', 'PRP'), ('want', 'VBP'), ('everyone', 'NN'), ('to', 'TO'), ('think', 'VB'), ('about', 'IN'), ('that.', 'NN'), ('”', 'NN'), ('It', 'PRP'), ('was', 'VBD'), ('a', 'DT'), ('long', 'JJ'), ('journey', 'NN'), ('for', 'IN'), ('Ms.', 'NNP'), ('Ichikawa', 'NNP'), ('who', 'WP'), ('was', 'VBD'), ('removed', 'VBN'), ('from', 'IN'), ('school', 'NN'), ('after', 'IN'), ('being', 'VBG'), ('put', 'VBN'), ('on', 'IN'), ('the', 'DT'), ('ventilator', 'NN'), ('at', 'IN'), ('age', 'NN'), ('13', 'CD'), ('But', 'CC'), ('she', 'PRP'), ('refused', 'VBD'), ('to', 'TO'), ('disappear', 'VB'), ('becoming', 'VBG'), ('an', 'DT'), ('author', 'NN'), ('in', 'IN'), ('her', 'PRP$'), ('20s', 'CD'), ('in', 'IN'), ('an', 'DT'), ('effort', 'NN'), ('to', 'TO'), ('reclaim', 'VB'), ('a', 'DT'), ('voice', 'NN'), ('in', 'IN'), ('society', 'NN'), ('For', 'IN'), ('two', 'CD'), ('decades', 'NNS'), ('she', 'PRP'), ('wrote', 'VBD'), ('more', 'JJR'), ('than', 'IN'), ('30', 'CD'), ('pulp', 'NN'), ('romance', 'NN'), ('and', 'CC'), ('fantasy', 'NN'), ('stories', 'NNS'), ('meant', 'VBP'), ('for', 'IN'), ('young', 'JJ'), ('readers', 'NNS'), ('But', 'CC'), ('all', 'DT'), ('of', 'IN'), ('her', 'PRP$'), ('manuscripts', 'NNS'), ('were', 'VBD'), ('rejected', 'VBN'), ('We', 'PRP'), ('are', 'VBP'), ('having', 'VBG'), ('trouble', 'NN'), ('retrieving', 'VBG'), ('the', 'DT'), ('article', 'NN'), ('content', 'NN'), ('Please', 'NNP'), ('enable', 'JJ'), ('JavaScript', 'NNP'), ('in', 'IN'), ('your', 'PRP$'), ('browser', 'NN'), ('settings', 'NNS'), ('Thank', 'NNP'), ('you', 'PRP'), ('for', 'IN'), ('your', 'PRP$'), ('patience', 'NN'), ('while', 'IN'), ('we', 'PRP'), ('verify', 'VBP'), ('access', 'NN'), ('If', 'IN'), ('you', 'PRP'), ('are', 'VBP'), ('in', 'IN'), ('Reader', 'NNP'), ('mode', 'NN'), ('please', 'NN'), ('exit', 'NN'), ('and', 'CC'), ('log', 'NN'), ('into', 'IN'), ('your', 'PRP$'), ('Times', 'NNP'), ('account', 'NN'), ('or', 'CC'), ('subscribe', 'VB'), ('for', 'IN'), ('all', 'DT'), ('of', 'IN'), ('The', 'DT'), ('Times', 'NNP'), ('Thank', 'NNP'), ('you', 'PRP'), ('for', 'IN'), ('your', 'PRP$'), ('patience', 'NN'), ('while', 'IN'), ('we', 'PRP'), ('verify', 'VBP'), ('access', 'NN'), ('Already', 'RB'), ('a', 'DT'), ('subscriber', 'NN'), ('Log', 'NNP'), ('in', 'IN'), ('Want', 'NNP'), ('all', 'DT'), ('of', 'IN'), ('The', 'DT'), ('Times', 'NNP'), ('Subscribe', 'NNP'), ('Advertisement', 'NN')]

  def test_basic(self):
    self.assertEqual(find_pos_for_word(self.pos_tags, "invisible"), "JJ",
                                       "POS is found for word that has no punctuation attached.")

  def test_not_there(self):
    self.assertEqual(find_pos_for_word(self.pos_tags, "usb"), None,
                                       "POS is not found for word that is not in the tag list.")

  def test_punc_attached(self):
    self.assertEqual(find_pos_for_word(self.pos_tags, "machismo"), "NN",
                                       "POS is found for word that has a token ending with punctuation.")

if __name__ == '__main__':
    unittest.main()
